import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar;

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}


group = 'ac.boar'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "opencollab-dev"
        url = "https://repo.opencollab.dev/main/"
    }
}

dependencies {
    compileOnly("org.cloudburstmc.protocol:bedrock-connection:3.0.0.Beta6-20250415.154650-7")
    compileOnly("org.geysermc.geyser:core:2.7.0-SNAPSHOT") {
        exclude group: "com.google.code.gson", module: "gson"
    }
    compileOnly("org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT") {
        exclude group: "com.google.code.gson", module: "gson"
    }
    compileOnly("it.unimi.dsi:fastutil:8.5.15")
    compileOnly("org.projectlombok:lombok:1.18.36")
    annotationProcessor("org.projectlombok:lombok:1.18.36")

    compileOnly("com.google.code.gson:gson:2.3.1")
    testImplementation("com.google.code.gson:gson:2.3.1")
}

tasks.named('shadowJar', ShadowJar) {
    relocate 'it.unimi.dsi.fastutil.ints', 'org.geysermc.geyser.platform.spigot.shaded.it.unimi.dsi.fastutil.ints'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}